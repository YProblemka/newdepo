name: CI/CD

on:
  push:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      pg_db_test:
        image: postgres:13.4
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
          POSTGRES_DB: test
        ports:
          - 55432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name pg_db_test

    strategy:
      matrix:
        operating-system: [ ubuntu-latest ]
        php-versions: [ '8.1' ]

    name: PHP${{ matrix.php-versions }} - L9 - ${{ matrix.operating-system}}

    env:
      DB_HOST: localhost
      DB_DATABASE: test
      DB_PORT: 55432
      DB_USERNAME: root
      DB_PASSWORD: root
      APP_URL: http://localhost
      APP_DEBUG: False

    steps:
      - uses: actions/checkout@v2
      - name: Install PHP versions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
      - name: Get Composer Cache Directory 2
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        id: actions-cache
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Cache PHP dependencies
        uses: actions/cache@v2
        id: vendor-cache
        with:
          path: vendor
          key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Dependencies
        if: steps.vendor-cache.outputs.cache-hit != 'true'
        run: composer install -q --ignore-platform-reqs --no-scripts --optimize-autoloader --no-progress

      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Run Migrations
        run: php artisan migrate
      - name: Create srorage link
        run: php artisan storage:link

      - name: Execute tests
        run: vendor/bin/phpunit

  Deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Retrieving modified files
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          port: ${{ secrets.DEPLOY_SERVER_PORT }}
          username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
          password: ${{ secrets.DEPLOY_SERVER_PASSWORD }}
          script_stop: true
          script: |
            cd ~/template-example
            ./restart.sh
      - name: Final
        run: echo "Succesfully deployed"
